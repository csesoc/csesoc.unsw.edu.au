// ----------------------------------------------------------------------

// Grid Layout

// ----------------------------------------------------------------------
@use 'sass:math';

@function width($i) {
  $width: ($i / $grid-columns) * 100%;
  @return $width;
}

.flex-grid {
  display: flex;
  flex-wrap: wrap;
  /** 
   * The negative margins are added to balance the padding we use to create
   * the grid gap so that no empty space is left between the .flex-grid
   * element and its container.
   */
  margin: 0 0 0 ($gap-horizontal * -1);
}

.col {
  padding: 0 0 $gap-vertical $gap-horizontal;
  /**
   * Makes sure that the background-color/image is not applied to the
   * padding.
   */
  background-clip: content-box;
  /**
   * Sets the initial main size of a flex item.
   */
  flex-basis: 100%;
}

@for $i from 1 through $grid-columns {
  .col--#{$i} {
    @extend .col;
    flex-basis: round-width($i);
    max-width: round-width($i);
  }
}

@media only screen and (min-width: 600px) {
  @for $i from 1 through $grid-columns {
    .col--md-#{$i} {
      flex-basis: width($i);
      max-width: width($i);
    }
  }
}